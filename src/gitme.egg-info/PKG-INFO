Metadata-Version: 2.4
Name: gitme
Version: 0.1.0
Summary: AI-powered git commit message generator
Home-page: https://github.com/yourusername/gitme
Author: Your Name
Author-email: Your Name <jingwang.physics@gmail.com>
License: MIT
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: click>=8.0.0
Requires-Dist: anthropic>=0.18.0
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# GitMe

AI-powered git commit message generator.

## Features

- Analyzes git diff to generate meaningful commit messages
- Uses Claude AI for intelligent summarization
- Supports both staged and all changes
- JSON output format for file changes
- Direct commit creation with generated messages
- Configurable model selection

## Installation

```bash
pip install gitme
```

Or install from source:

```bash
git clone https://github.com/yourusername/gitme.git
cd gitme
pip install -e .
```

## Setup

Set your Anthropic API key:

```bash
export ANTHROPIC_API_KEY="your-api-key-here"
```

## Usage

### Generate Commit Messages

Generate commit message for staged changes:
```bash
gitme
gitme generate  # explicit subcommand
```

Generate commit message for all changes:
```bash
gitme --all
gitme -a
```

Output changes as JSON:
```bash
gitme --json
gitme -j
```

Create commit directly:
```bash
gitme --commit
gitme -c
```

Use a different Claude model:
```bash
gitme --model claude-3-opus-20240229
gitme -m claude-3-sonnet-20240229
```

### View Message History

Show previously generated commit messages:
```bash
gitme show
```

Show last 5 messages:
```bash
gitme show --limit 5
gitme show -n 5
```

Show messages from all repositories:
```bash
gitme show --all-repos
gitme show -r
```

Clear message history for current repository:
```bash
gitme show --clear
```

Clear all message history:
```bash
gitme show --clear --all-repos
```

## Options

- `-s, --staged-only`: Analyze only staged changes (default)
- `-a, --all`: Analyze all changes including unstaged
- `-j, --json`: Output file changes as JSON
- `-k, --api-key`: Anthropic API key
- `-m, --model`: Claude model to use
- `-c, --commit`: Create commit with generated message

## Requirements

- Python 3.8+
- Git
- Anthropic API key

## License

MIT
